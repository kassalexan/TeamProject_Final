@model SignUpVM
@using TeamProject.Models

@{
    ViewBag.Title = "Sign Up";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /*custom font*/

    /*basic reset*/
    * {
        margin: 0;
        padding: 0;
    }

    html {
        height: 100%;
        /*Image only BG fallback*/
        /*background = gradient + image pattern combo*/
        background: linear-gradient(rgba(196, 102, 0, 0.6), rgba(155, 89, 182, 0.6));
    }

    body {
        font-family: montserrat, arial, verdana;
    }
    /*form styles*/
    #msform {
        width: 400px;
        margin: 50px auto;
        text-align: center;
        position: relative;
    }

        #msform fieldset {
            background: white;
            border: 0 none;
            border-radius: 3px;
            box-shadow: 0 0 15px 1px rgba(0, 0, 0, 0.4);
            padding: 20px 30px;
            box-sizing: border-box;
            width: 80%;
            margin: 0 10%;
            /*stacking fieldsets above each other*/
            position: relative;
        }
            /*Hide all except first fieldset*/
            #msform fieldset:not(:first-of-type) {
                display: none;
            }
        /*inputs*/
        #msform input, #msform textarea {
            padding: 15px;
            border: 1px solid #ccc;
            border-radius: 3px;
            margin-bottom: 10px;
            width: 100%;
            box-sizing: border-box;
            font-family: montserrat;
            color: #2C3E50;
            font-size: 13px;
        }
        /*buttons*/
        #msform .action-button {
            width: 100px;
            background: #27AE60;
            font-weight: bold;
            color: white;
            border: 0 none;
            border-radius: 1px;
            cursor: pointer;
            padding: 10px 5px;
            margin: 10px 5px;
        }

            #msform .action-button:hover, #msform .action-button:focus {
                box-shadow: 0 0 0 2px white, 0 0 0 3px #27AE60;
            }
    /*headings*/
    .fs-title {
        font-size: 15px;
        text-transform: uppercase;
        color: #2C3E50;
        margin-bottom: 10px;
    }

    .fs-subtitle {
        font-weight: normal;
        font-size: 13px;
        color: #666;
        margin-bottom: 20px;
    }
    /*progressbar*/
    #progressbar {
        margin-bottom: 30px;
        overflow: hidden;
        /*CSS counters to number the steps*/
        counter-reset: step;
    }

        #progressbar li {
            list-style-type: none;
            color: white;
            text-transform: uppercase;
            font-size: 9px;
            width: 33.33%;
            float: left;
            position: relative;
        }

            #progressbar li:before {
                content: counter(step);
                counter-increment: step;
                width: 20px;
                line-height: 20px;
                display: block;
                font-size: 10px;
                color: #333;
                background: white;
                border-radius: 3px;
                margin: 0 auto 5px auto;
            }
            /*progressbar connectors*/
            #progressbar li:after {
                content: '';
                width: 100%;
                height: 2px;
                background: white;
                position: absolute;
                left: -50%;
                top: 9px;
                z-index: -1; /*put it behind the numbers*/
            }

            #progressbar li:first-child:after {
                /*connector not needed before the first step*/
                content: none;
            }
            /*marking active/completed steps green*/
            /*The number of the step and the connector before it = green*/
            #progressbar li.active:before, #progressbar li.active:after {
                background: #27AE60;
                color: white;
            }

    .fs-title {
        font-size: 15px;
        text-transform: uppercase;
        color: white;
        margin-bottom: 20px;
    }

    .text-danger {
        color: #dc3545 !important;
        font-size: 10px;
    }

    .sr-only {
        color: #dc3545;
        font-size: 11px;
    }

</style>

<div class="single-hero-post bg-overlay">
    <!-- Post Image -->
    <div class="slide-img bg-img" style="background-image: url(../../Content/img/bg-img/1.jpg);"></div>
    <div class="container">
        <div class="row">
        </div>
        <div class="row h-100 align-items-center" style="margin-top:100px;justify-content:center">
            <div class="row justify-content-between">
                <form id="msform" method="post" action="@Url.Action("SignUp","Auth")">

                   
                    <h2 class="fs-title">Create your account</h2>
                    <!-- progressbar -->
                    <ul id="progressbar">
                        <li class="active">Account Info</li>
                        <li>Subscription Info</li>
                        <li>Card Info</li>
                    </ul>
                    <!-- fieldsets -->
                    <fieldset>
                        @Html.ValidationMessage("ExistingUsername", "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(i => i.Username, "", new { @class = "text-danger" })
                        @Html.TextBoxFor(i => i.Username, new { @class = "form-control", placeholder = "Username", id = "username" })
                        @Html.ValidationMessageFor(i => i.Email, "", new { @class = "text-danger" })
                        @Html.LabelFor(i => i.Email, new { @class = "sr-only" })
                        @Html.TextBoxFor(i => i.Email, new { @class = "form-control", placeholder = "Email" })
                        @Html.ValidationMessageFor(i => i.Password, "", new { @class = "text-danger" })
                        @Html.PasswordFor(i => i.Password, new { @class = "form-control", placeholder = "Password" })
                        @Html.ValidationMessageFor(i => i.ConfirmPassword, "", new { @class = "text-danger" })
                        @Html.PasswordFor(i => i.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
                        @Html.ValidationMessageFor(i => i.Name, "", new { @class = "text-danger" })
                        @Html.TextBoxFor(i => i.Name, new { @class = "form-control", placeholder = "Name" })
                        @Html.ValidationMessageFor(i => i.Surname, "", new { @class = "text-danger" })
                        @Html.TextBoxFor(i => i.Surname, new { @class = "form-control", placeholder = "Surname" })
                        @Html.ValidationMessageFor(i => i.Mobile, "", new { @class = "text-danger" })
                        @Html.TextBoxFor(i => i.Mobile, new { @class = "form-control", placeholder = "Mobile" })
                        <input type="button" name="next" class="next action-button" value="Next" />
                    </fieldset>
                    <fieldset>
                        <div class="form-check" style="margin-right: 120px">
                            <label class="form-check-label" style="font-family:montserrat" for="premium">
                                Premium
                            </label>
                            <input type="radio" class="form-check-input" checked value="2" id="premium" name="RoleId" />

                        </div>
                        <p id="info1" style="display: none">sdfwfwefeigueroijgiewfwefewf</p>
                        <br>
                        <div class="form-check" style="margin-right: 120px">
                            <label class="form-check-label" style="font-family:montserrat" for="simple">
                                Simple
                            </label>
                            <input type="radio" onclick="checkFluency()" class="form-check-input" value="3" id="simple" name="RoleId" title="Simple" />
                            <div id="txtPopup" style="display: none;">hello! It is a popup</div>
                        </div>
                        <select id="district" class="custom-select widget-title " style="display: none;font-family:montserrat">
                            <option selected>Exarcheia</option>
                            <option value="2">Syntagma</option>
                            <option value="3">Omonoia</option>
                        </select>
                        <input type="button" name="previous" class="previous action-button" value="Previous" />
                        <input type="button" name="next" class="next action-button" value="Next" />
                    </fieldset>
                    <fieldset>
                        @Html.ValidationMessageFor(i => i.Card.CardNumber, "", new { @class = "text-danger" })
                        @Html.TextBoxFor(i => i.Card.CardNumber, new { @class = "form-control", placeholder = "Card Number" })
                        @Html.ValidationMessageFor(i => i.Card.Month, "", new { @class = "text-danger" })
                        @Html.TextBoxFor(i => i.Card.Month, new { @class = "form-control", placeholder = "Month" })
                        @Html.ValidationMessageFor(i => i.Card.Year, "", new { @class = "text-danger" })
                        @Html.TextBoxFor(i => i.Card.Year, new { @class = "form-control", placeholder = "Year" })
                        @Html.ValidationMessageFor(i => i.Card.SecurityCode, "", new { @class = "text-danger" })
                        @Html.TextBoxFor(i => i.Card.SecurityCode, new { @class = "form-control", placeholder = "Security Code" })
                        @Html.ValidationMessageFor(i => i.Card.NameOnCard, "", new { @class = "text-danger" })
                        @Html.TextBoxFor(i => i.Card.NameOnCard, new { @class = "form-control", placeholder = "Name On Card" })
                        @Html.ValidationMessageFor(i => i.Card.Country, "", new { @class = "text-danger" })
                        @Html.TextBoxFor(i => i.Card.Country, new { @class = "form-control", placeholder = "Country" })
                        <input type="button" name="previous" class="previous action-button" value="Previous" />
                        <input type="submit" name="submit" class="submit action-button" value="Submit" />
                    </fieldset>
                </form>
            </div>

        </div>
    </div>
</div>
<!-- multistep form -->



@section Scripts {
    <script>

        //jQuery time
        var current_fs, next_fs, previous_fs; //fieldsets
        var left, opacity, scale; //fieldset properties which we will animate
        var animating; //flag to prevent quick multi-click glitches

        $(".next").click(function () {
            if (animating) return false;
            animating = true;

            current_fs = $(this).parent();
            next_fs = $(this).parent().next();

            //activate next step on progressbar using the index of next_fs
            $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");

            //show the next fieldset
            next_fs.show();
            //hide the current fieldset with style
            current_fs.animate({ opacity: 0 }, {
                step: function (now, mx) {
                    //as the opacity of current_fs reduces to 0 - stored in "now"
                    //1. scale current_fs down to 80%
                    scale = 1 - (1 - now) * 0.2;
                    //2. bring next_fs from the right(50%)
                    left = (now * 50) + "%";
                    //3. increase opacity of next_fs to 1 as it moves in
                    opacity = 1 - now;
                    current_fs.css({
                        'transform': 'scale(' + scale + ')',
                        'position': 'absolute'
                    });
                    next_fs.css({ 'left': left, 'opacity': opacity });
                },
                duration: 800,
                complete: function () {
                    current_fs.hide();
                    animating = false;
                },
                //this comes from the custom easing plugin
                easing: 'easeInOutBack'
            });
        });

        $(".previous").click(function () {
            if (animating) return false;
            animating = true;

            current_fs = $(this).parent();
            previous_fs = $(this).parent().prev();

            //de-activate current step on progressbar
            $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");

            //show the previous fieldset
            previous_fs.show();
            //hide the current fieldset with style
            current_fs.animate({ opacity: 0 }, {
                step: function (now, mx) {
                    //as the opacity of current_fs reduces to 0 - stored in "now"
                    //1. scale previous_fs from 80% to 100%
                    scale = 0.8 + (1 - now) * 0.2;
                    //2. take current_fs to the right(50%) - from 0%
                    left = ((1 - now) * 50) + "%";
                    //3. increase opacity of previous_fs to 1 as it moves in
                    opacity = 1 - now;
                    current_fs.css({ 'left': left });
                    previous_fs.css({ 'transform': 'scale(' + scale + ')', 'opacity': opacity });
                },
                duration: 800,
                complete: function () {
                    current_fs.hide();
                    animating = false;
                },
                //this comes from the custom easing plugin
                easing: 'easeInOutBack'
            });
        });

        //$(".submit").click(function () {
        //    return false;
        //})

        //function checkFluency() {
        //    var checkbox = document.getElementById('simple');
        //    if (checkbox.checked != true) {
        //        alert("you need to be fluent in English to apply for the job");
        //    }
        //}


        $("#simple").click(function () {
            if ($(this).is(":checked")) {
                $("#district").show();
                $("#txtPopup").dialog({
                    close: function () {
                        the_checkbox.prop('checked', false);
                    }
                });
            } else {
                $("#district").hide();
            }
        });

        $("#premium").click(function () {
            if ($(this).is(":checked")) {
                $("#district").hide();
            } else {
                $("#district").show();
            }
        });

        $('#contact_name').on('input', function () {
            var input = $(this);
            var username = $(this).val();
            if (username.length > 3) {
                input.removeclass("invalid").addclass("valid");
            }
            else { input.removeclass("valid").addclass("invalid"); }	
        });

    </script>
}